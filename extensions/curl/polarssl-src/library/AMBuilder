# vim: sts=2 ts=8 sw=2 tw=99 et ft=python: 
import os, platform

builder.SetBuildFolder('polarssl')

binary = builder.compiler.StaticLibrary('polarssl')
binary.compiler.includes += [
  os.path.join(builder.sourcePath, 'extensions', 'curl', 'polarssl-src', 'library'),
  os.path.join(builder.sourcePath, 'extensions', 'curl', 'polarssl-src', 'include')
]

if builder.target_platform == 'windows':
  binary.compiler.defines += [
    'WIN32',
	'NDEBUG',
	'_WINDOWS',
	'_USRDLL',
	'POLARSSL_EXPORTS',
  ]
elif builder.target_platform == 'linux':
  binary.compiler.defines += ['_GNU_SOURCE']

binary.sources += [
  'aes.c',
  'aesni.c',
  'arc4.c',
  'asn1parse.c',
  'asn1write.c',
  'base64.c',
  'bignum.c',
  'blowfish.c',
  'camellia.c',
  'certs.c',
  'cipher.c',
  'cipher_wrap.c',
  'ctr_drbg.c',
  'debug.c',
  'des.c',
  'dhm.c',
  'ecdh.c',
  'ecdsa.c',
  'ecp.c',
  'ecp_curves.c',
  'entropy.c',
  'entropy_poll.c',
  'error.c',
  'gcm.c',
  'havege.c',
  'hmac_drbg.c',
  'md2.c',
  'md4.c',
  'md5.c',
  'md.c',
  'md_wrap.c',
  'memory_buffer_alloc.c',
  'net.c',
  'oid.c',
  'padlock.c',
  'pbkdf2.c',
  'pem.c',
  'pk.c',
  'pkcs11.c',
  'pkcs12.c',
  'pkcs5.c',
  'pkparse.c',
  'pk_wrap.c',
  'pkwrite.c',
  'platform.c',
  'ripemd160.c',
  'rsa.c',
  'sha1.c',
  'sha256.c',
  'sha512.c',
  'ssl_cache.c',
  'ssl_ciphersuites.c',
  'ssl_cli.c',
  'ssl_srv.c',
  'ssl_tls.c',
  'threading.c',
  'timing.c',
  'version.c',
  'version_features.c',
  'x509.c',
  'x509_create.c',
  'x509_crl.c',
  'x509_crt.c',
  'x509_csr.c',
  'x509write_crt.c',
  'x509write_csr.c',
  'xtea.c'
]
rvalue = builder.Add(binary)

